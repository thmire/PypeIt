
**Version**: 1.0.1

=================  =====================  =================  ========================================================================================================================================================================================================================================================
Attribute          Type                   Array Type         Description                                                                                                                                                                                                                                             
=================  =====================  =================  ========================================================================================================================================================================================================================================================
``binning``        str                                       Binning in PypeIt orientation (not the original)                                                                                                                                                                                                        
``darkcurr``       int, float                                Dark current (e-/pixel/hour)                                                                                                                                                                                                                            
``dataext``        int                                       Index of fits extension containing data                                                                                                                                                                                                                 
``datasec``        `numpy.ndarray`_       str                Either the data sections or the header keyword where the valid data sections can be obtained, one per amplifier. If defined explicitly should be in FITS format (e.g., [1:2048,10:4096]).                                                               
``det``            int, `numpy.integer`_                     PypeIt designation for detector number (1-based).                                                                                                                                                                                                       
``gain``           `numpy.ndarray`_       `numpy.floating`_  Inverse gain (e-/ADU). A list should be provided if a detector contains more than one amplifier.                                                                                                                                                        
``mincounts``      int, float                                Counts (e-) in a pixel below this value will be ignored as being unphysical.                                                                                                                                                                            
``nonlinear``      int, float                                Percentage of detector range which is linear (i.e. everything above ``nonlinear*saturation`` will be flagged as saturated)                                                                                                                              
``numamplifiers``  int                                       Number of amplifiers                                                                                                                                                                                                                                    
``oscansec``       `numpy.ndarray`_       str                Either the overscan section or the header keyword where the valid data sections can be obtained, one per amplifier. If defined explicitly should be in FITS format (e.g., [1:2048,10:4096]).                                                            
``platescale``     int, float                                arcsec per pixel in the spatial dimension for an unbinned pixel                                                                                                                                                                                         
``ronoise``        `numpy.ndarray`_       `numpy.floating`_  Read-out noise (e-). A list should be provided if a detector contains more than one amplifier. If any element of this list is <=0, the readout noise will be determined from the overscan regions defined by oscansec.                                  
``saturation``     int, float                                The detector saturation level in ADU/DN                                                                                                                                                                                                                 
``spatflip``       bool                                      If this is True then the spatial dimension will be flipped.  PypeIt expects echelle orders to increase with increasing pixel number.  I.e., setting spatflip=True can reorder images so that blue orders appear on the left and red orders on the right.
``specaxis``       int                                       Spectra are dispersed along this axis. Allowed values are 0 (first dimension for a numpy array shape) or 1 (second dimension for numpy array shape).                                                                                                    
``specflip``       bool                                      If this is True then the dispersion dimension (specified by the specaxis) will be flipped.  PypeIt expects wavelengths to increase with increasing pixel number.  If this is not the case for this instrument, set specflip to True.                    
``xgap``           int, float                                Gap between the square detector pixels (expressed as a fraction of the x pixel size -- x is predominantly the spatial axis)                                                                                                                             
``ygap``           int, float                                Gap between the square detector pixels (expressed as a fraction of the y pixel size -- y is predominantly the spectral axis)                                                                                                                            
``ysize``          int, float                                The size of a pixel in the y-direction as a multiple of the x pixel size (i.e. xsize = 1.0 -- x is predominantly the dispersion axis)                                                                                                                   
=================  =====================  =================  ========================================================================================================================================================================================================================================================
